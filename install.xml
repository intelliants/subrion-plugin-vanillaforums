<?xml version="1.0" encoding="utf-8" ?>
<plugin name="vanillaforums">
	<title>Vanilla Single Sign-On</title>
	<summary>Vanilla forums members integration plugin.</summary>
	<author>Intelliants LLC</author>
	<contributor>Intelliants LLC</contributor>
	<version>3.3.0</version>
	<date>2015-08-04</date>
	<compatibility>3.3</compatibility>

	<config group="miscellaneous" name="vanilla_separator" type="divider">Vanilla forums</config>
	<config group="miscellaneous" name="vanilla_client_id" type="text" description="Vanilla client ID"><![CDATA[]]></config>
	<config group="miscellaneous" name="vanilla_secret_key" type="text" description="Vanilla secret"><![CDATA[]]></config>

	<hooks>
		<hook name="phpCoreBeforePageDisplay" page_type="front" pages="login">
			<![CDATA[
if (iaView::REQUEST_JSON == $iaView->getRequestType())
{
	// include jsConnect library
	require_once IA_PLUGINS . 'vanillaforums' . IA_DS . 'includes' . IA_DS . 'functions.jsconnect.php';

	$client_id = $iaCore->get('vanilla_client_id');
	$secret_key = $iaCore->get('vanilla_secret_key');

	// init users class
	$iaUsers = $iaCore->factory('users');

	$vanilla_user = array();
	if (!empty($client_id) && !empty($secret_key))
	{
		if (iaUsers::hasIdentity())
		{
			// fill in the user information in a way that Vanilla can understand
			$vanilla_user['uniqueid'] = iaUsers::getIdentity()->id;
			$vanilla_user['name'] = iaUsers::getIdentity()->username;
			$vanilla_user['email'] = iaUsers::getIdentity()->email;
			{
				$avatar = unserialize(iaUsers::getIdentity()->avatar);
				$vanilla_user['photourl'] = IA_CLEAR_URL . 'uploads/' . $avatar['path'];
			}
		}
		elseif (!iaUsers::hasIdentity())
		{
			$this->factory('util');
			iaUtil::go_to(IA_URL . 'login/');
		}

		// generate the jsConnect string
		WriteJsConnect($vanilla_user, $_GET, $client_id, $secret_key, false);
		exit;
	}
}
			]]>
		</hook>
	</hooks>
</plugin>